# For more information: https://laravel.com/docs/sail
version: '3'
services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        image: 'backend:0.1'
        ports:
            - '8000:80'
        volumes:
            - '../Dev:/var/www/laravel_app'
        networks:
            - ops
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium
        restart: always

    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'opsmysql:/var/lib/mysql'
        networks:
            - ops
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
        restart: always

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'opsredis:/data'
        networks:
            - ops
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
        restart: always

    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'opsmeilisearch:/data.ms'
        networks:
            - ops
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
        restart: always

    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - ops
        restart: always

    selenium:
        image: 'selenium/standalone-chrome'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - ops
        restart: always

    frontend:
        build: ./frontend
        image: 'frontend:0.1'
        ports: 
            - '3000:80'
        volumes:
            - '../Dev/react/app/build:/var/www/html/public'
            # - './react/app/public:/home/react/app/public'
            # - './react/app/src:/home/react/app/src'
        networks:
            - ops
        restart: always

networks:
    ops:
        driver: bridge
volumes:
    opsmysql:
        driver: local
    opsredis:
        driver: local
    opsmeilisearch:
        driver: local
